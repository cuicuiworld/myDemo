http://caibaojian.com/nodejs/

node每一个API都是异步的，并作为一个独立线程运行。使用异步函数调用，并处理并发。

node所有的事件机制都是用观察者模式实现的。

node是单线程单进程应用程序，通过事件和回调支持并发。性能非常高。

事件循环

	node使用事件驱动模型，当web server接到请求，就会把它关闭掉，然后处理。然后服务下一个web请求。
	
	当这个请求完成后，被放回到队列。当到达队列开头，就被返回到用户。
	
	web server一直接受请求而不需要 等待任何读写操作。
	
	整个事件驱动模型中，就形成了主循环来监听事件，当检测到事件时就会触发函数。
	
EventEmitter
	
	node所有异步操作完成时，都会发送一个事件到事件队列。
	
	node里面许多对象都会分发事件
	
		一个net.server对象在每次有新连接时都会分发一个事件
		
		一个fs.readStream对象在文件被打开的时候发出一个事件。
		
		这些都是EventEmitter的实例
		
	events模块只提供了一个对象：events.EventEmitter。
	
	events.EventEmitter核心就是事件触发和事件监听的封装
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	